Random seed: 6266017214965306566
---------------- Starting Your Algo --------------------
Turn 0
Turn 1
Opponent breached at (25, 11) on turn 1
Opponent breached at (25, 11) on turn 1
Turn 2
Turn 3
Enemy defense weighted L=21.0, R=26.0
Resort side: l
Turn 4
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
Turn 5
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
Turn 6
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
Turn 7
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
Turn 8
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
Turn 9
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
Turn 10
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
Turn 11
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
Turn 12
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
removing unit with health: 60.0 and max health: 120.0
Traceback (most recent call last):
  File "/home/ron0/development/python/run_time_terror_C1Terminal/definitive@8/algo_strategy.py", line 876, in <module>
    AlgoStrategy().start()
    ~~~~~~~~~~~~~~~~~~~~^^
  File "/home/ron0/development/python/run_time_terror_C1Terminal/definitive@8/gamelib/algocore.py", line 74, in start
    self.on_turn(game_state_string)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "/home/ron0/development/python/run_time_terror_C1Terminal/definitive@8/algo_strategy.py", line 189, in on_turn
    attack, loc, num = self.should_attack(state)
                       ~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/home/ron0/development/python/run_time_terror_C1Terminal/definitive@8/algo_strategy.py", line 603, in should_attack
    loc, survived = self.full_sim(state, scouts)
                    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/home/ron0/development/python/run_time_terror_C1Terminal/definitive@8/algo_strategy.py", line 629, in full_sim
    state = copy.deepcopy(orig_state)
  File "/usr/lib/python3.13/copy.py", line 163, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/usr/lib/python3.13/copy.py", line 260, in _reconstruct
    state = deepcopy(state, memo)
  File "/usr/lib/python3.13/copy.py", line 137, in deepcopy
    y = copier(x, memo)
  File "/usr/lib/python3.13/copy.py", line 222, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ~~~~~~~~^^^^^^^^^^^^^
  File "/usr/lib/python3.13/copy.py", line 163, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/usr/lib/python3.13/copy.py", line 260, in _reconstruct
    state = deepcopy(state, memo)
  File "/usr/lib/python3.13/copy.py", line 137, in deepcopy
    y = copier(x, memo)
  File "/usr/lib/python3.13/copy.py", line 222, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ~~~~~~~~^^^^^^^^^^^^^
  File "/usr/lib/python3.13/copy.py", line 137, in deepcopy
    y = copier(x, memo)
  File "/usr/lib/python3.13/copy.py", line 197, in _deepcopy_list
    append(deepcopy(a, memo))
           ~~~~~~~~^^^^^^^^^
  File "/usr/lib/python3.13/copy.py", line 137, in deepcopy
    y = copier(x, memo)
  File "/usr/lib/python3.13/copy.py", line 197, in _deepcopy_list
    append(deepcopy(a, memo))
           ~~~~~~~~^^^^^^^^^
  File "/usr/lib/python3.13/copy.py", line 137, in deepcopy
    y = copier(x, memo)
  File "/usr/lib/python3.13/copy.py", line 197, in _deepcopy_list
    append(deepcopy(a, memo))
           ~~~~~~~~^^^^^^^^^
  File "/usr/lib/python3.13/copy.py", line 163, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/usr/lib/python3.13/copy.py", line 260, in _reconstruct
    state = deepcopy(state, memo)
  File "/usr/lib/python3.13/copy.py", line 137, in deepcopy
    y = copier(x, memo)
  File "/usr/lib/python3.13/copy.py", line 222, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ~~~~~~~~^^^^^^^^^^^^^
  File "/usr/lib/python3.13/copy.py", line 119, in deepcopy
    def deepcopy(x, memo=None, _nil=[]):
    
KeyboardInterrupt
